#!/bin/bash -eu
# smv - "secure move": moves a file from the local machine to a remote machine.

if [[ $# -ne 2 ]]; then
  echo "usage: $(basename $0) <src> [user@]<host>:<dest>" 1>&2
  exit 1
fi

# Make sure the source file exists.
readonly src_path=${1}
readonly src_name=$(basename "${src_path}")
if [[ ! -f "${src_path}" ]]; then
  echo "source file not found: ${src_path}" 1>&2
  exit 1
fi

# Make sure the remote host has been provided.
readonly remote_string=${2}
readonly remote_host=${remote_string%%:*}
readonly remote_path=${remote_string##*:}
if [[ "${remote_host}" == "${remote_string}" ]]; then
  echo "remote host is missing from <dest> argument" 1>&2
  exit 1
fi

# Get the MD5 hash of the local file.
readonly src_hash_result=$(md5 "${src_path}")
readonly src_hash=${src_hash_result##*= }

# Copy the file over to the remote host.
scp -p "${src_path}" "${remote_string}" > /dev/null

# Get the MD5 hash of the remote file.
remote_md5_path=${remote_path%%${src_name}}
remote_md5_path=${remote_md5_path%%/}/${src_name}
remote_md5_path=${remote_md5_path/\~/$HOME}
readonly dest_hash_result=$(ssh ${remote_host} "md5 \"${remote_md5_path}\"")
readonly dest_hash=${dest_hash_result##*= }

# Make sure the hashes match, and abort if they do not.
if [[ "${src_hash}" != "${dest_hash}" ]]; then
  echo "hash does not match - not removing local file" 1>&2
  exit 1
fi

# If the hashes do match, remove the local file.
rm "${src_path}"
